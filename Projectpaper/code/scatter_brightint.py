from pylab import *
from mpl_toolkits.axes_grid1 import AxesGrid
from mpl_toolkits.axes_grid1 import make_axes_locatable
from matplotlib.ticker import MultipleLocator
from scipy.interpolate import *
import numpy as np

#color biases
percent_red = np.array([10,30,50,70,90,100])
vdisp_red = np.array([0.107,0.078,0.051,0.019,-0.019,-0.034])
vdisp_red_err = np.array([0.028,0.023,0.019,0.025,0.018,0.018])
vdisp_red_err2 = np.array([0.278,0.252,0.225,0.214,0.196,0.197])
caustic_red = np.array([0.259,0.199,0.162,0.078,-0.013,-0.058])
caustic_red_err = np.array([0.054,0.044,0.039,0.047,0.034,0.037])
caustic_red_err2 = np.array([0.541,0.497,0.451,0.435,0.416,0.421])
d_red = np.array([0.351,0.276,0.178,0.088,-0.022,-0.064])
d_red_err = np.array([0.085,0.058,0.050,0.081,0.052,0.055])
d_red_err2 = np.array([0.812,0.748,0.665,0.645,0.600,0.592])
#color biases (random red)
percent_red = np.array([10,30,50,70,90,100])
vdisp_red_rand = np.array([0.114,0.083,0.039,0.012,-0.019,-0.030])
vdisp_red_rand_err = np.array([0.023,0.021,0.020,0.024,0.019,0.026])
vdisp_red_rand_err2 = np.array([0.255,0.245,0.219,0.199,0.197,0.184])
caustic_red_rand = np.array([0.261,0.201,0.118,0.063,-0.016,-0.051])
caustic_red_rand_err = np.array([0.041,0.045,0.039,0.056,0.039,0.051])
caustic_red_rand_err2 = np.array([0.477,0.470,0.445,0.411,0.423,0.406])
d_red_rand = np.array([0.374,0.271,0.149,0.069,-0.022,-0.055])
d_red_rand_err = np.array([0.067,0.062,0.059,0.072,0.062,0.074])
d_red_rand_err2 = np.array([0.736,0.713,0.647,0.587,0.598,0.565])
#core biases
vdisp_core = np.array([-0.047,-0.027,-0.023,-0.009,-0.004,-0.001])
vdisp_core_err = np.array([0.011,0.014,0.016,0.019,0.017,0.012])
vdisp_core_err2 = np.array([0.187,0.187,0.170,0.170,0.169,0.160])
caustic_core = np.array([-0.046,-0.002,0.002,0.005,0.001,0.005])
caustic_core_err = np.array([0.029,0.028,0.033,0.040,0.034,0.027])
caustic_core_err2 = np.array([0.388,0.400,0.360,0.350,0.348,0.347])
d_core = np.array([-0.108,-0.039,-0.034,-0.005,0.001,0.005])
d_core_err = np.array([0.031,0.041,0.046,0.062,0.049,0.037])
d_core_err2 = np.array([0.549,0.560,0.510,0.560,0.501,0.501])
#wing biases
vdisp_wing = np.array([0.017,0.013,0.020,0.014,0.010,0.006])
vdisp_wing_err = np.array([0.017,0.012,0.015,0.015,0.018,0.017])
vdisp_wing_err2 = np.array([0.152,0.152,0.153,0.161,0.159,0.160])
caustic_wing = np.array([-0.141,-0.111,-0.046,-0.005,0.024,0.024])
caustic_wing_err = np.array([0.040,0.028,0.031,0.034,0.033,0.035])
caustic_wing_err2 = np.array([0.375,0.367,0.353,0.347,0.328,0.336])
d_wing = np.array([0.080,0.069,0.091,0.080,0.047,0.031])
d_wing_err = np.array([0.049,0.033,0.045,0.043,0.053,0.050])
d_wing_err2 = np.array([0.468,0.469,0.466,0.487,0.478,0.482])
#magnitude biases bright
percent_mag = np.array([10,30,50,70,90,100])
vdisp_mag = np.array([-0.046,-0.051,-0.039,-0.040,-0.028,-0.023])
vdisp_mag_err = np.array([0.023,0.017,0.016,0.019,0.018,0.019])
vdisp_mag_err2 = np.array([0.180,0.175,0.184,0.182,0.197,0.185])
caustic_mag = np.array([-0.084,-0.099,-0.067,-0.062,-0.046,-0.024])
caustic_mag_err = np.array([0.045,0.035,0.034,0.042,0.039,0.038])
caustic_mag_err2 = np.array([0.384,0.368,0.382,0.384,0.415,0.388])
d_mag = np.array([-0.107,-0.113,-0.083,-0.076,-0.051,-0.029])
d_mag_err = np.array([0.066,0.054,0.049,0.054,0.050,0.055])
d_mag_err2 = np.array([0.541,0.529,0.558,0.547,0.599,0.568])
#magnitude biases dim
vdisp_mag_dim = np.array([-0.050,-0.042,-0.036,-0.034,-0.035,-0.023])
vdisp_mag_dim_err = np.array([0.015,0.012,0.015,0.020,0.023,0.017])
vdisp_mag_dim_err2 = np.array([0.180,0.180,0.181,0.179,0.183,0.191])
caustic_mag_dim = np.array([-0.099,-0.068,-0.058,-0.051,-0.053,-0.024])
caustic_mag_dim_err = np.array([0.030,0.034,0.027,0.040,0.044,0.035])
caustic_mag_dim_err2 = np.array([0.383,0.379,0.377,0.372,0.380,0.406])
d_mag_dim = np.array([-0.116,-0.090,-0.066,-0.067,-0.064,-0.029])
d_mag_dim_err = np.array([0.043,0.039,0.046,0.060,0.066,0.050])
d_mag_dim_err2 = np.array([0.539,0.541,0.536,0.532,0.547,0.584])


surfscat = np.array([0.27,0.11,0.09,0.05,0.04,0.03,0.02,0.01])
#number biases and scatters (shifty-gapper + Beers Guo)
x = np.array([10,15,25,35,50,75,100,150])
dlos = np.array([1.124,0.929,0.708,0.616,0.567,0.488,0.461,0.424])
clos = np.array([0.855,0.656,0.487,0.421,0.384,0.330,0.313,0.289])
vlos = np.array([0.382,0.316,0.241,0.210,0.193,0.166,0.157,0.144])
dscat = np.array([1.279,1.038,0.779,0.682,0.621,0.536,0.499,0.454])
cscat = np.array([0.939,0.728,0.530,0.458,0.414,0.360,0.336,0.307])
vscat = np.array([0.400,0.348,0.260,0.228,0.206,0.177,0.165,0.151])
dbias = np.array([-0.835,-0.513,-0.213,-0.134,-0.045,0.000,0.020,0.030])
dbias_e = np.array([0.12,0.11,0.08,0.07,0.05,0.05,0.05,0.05])
cbias = np.array([-0.641,-0.390,-0.164,-0.101,-0.033,-0.003,0.010,0.015])
cbias_e = np.array([0.09,0.08,0.05,0.05,0.04,0.03,0.03,0.03])
vbias = np.array([-0.297,-0.187,-0.084,-0.057,-0.027,-0.012,-0.002,0.002])
vbias_e = np.array([0.04,0.04,0.03,0.02,0.02,0.02,0.02,0.02])
d3Dscat = np.array([0.600,0.376,0.283,0.228,0.182,0.151,0.140,0.135])
c3Dscat = np.array([0.430,0.259,0.198,0.156,0.126,0.102,0.096,0.093])

#Delucia
dlos_D = np.array([1.163,0.933,0.715,0.617,0.571,0.498,0.459,0.418])
clos_D = np.array([0.896,0.673,0.493,0.426,0.387,0.337,0.307,0.281])
vlos_D = np.array([0.395,0.317,0.243,0.210,0.194,0.169,0.156,0.142])
dscat_D = np.array([1.292,1.027,0.798,0.678,0.622,0.543,0.491,0.450])
cscat_D = np.array([0.963,0.731,0.541,0.460,0.416,0.362,0.326,0.302])
vscat_D = np.array([0.432,0.342,0.264,0.223,0.205,0.180,0.164,0.151])
dbias_D = np.array([-0.821,-0.542,-0.262,-0.163,-0.071,0.007,0.042,0.068])
dbias_e_D = np.array([0.13,0.10,0.08,0.07,0.07,0.05,0.04,0.04])
cbias_D = np.array([-0.625,-0.418,-0.201,-0.124,-0.053,0.008,0.032,0.044])
cbias_e_D = np.array([0.09,0.07,0.06,0.05,0.05,0.03,0.03,0.03])
vbias_D = np.array([-0.293,-0.197,-0.102,-0.068,-0.036,-0.010,0.003,0.011])
vbias_e_D = np.array([0.04,0.04,0.03,0.02,0.02,0.02,0.02,0.01])

#Bertone
dlos_Be = np.array([1.145,0.932,0.723,0.618,0.563,0.492,0.433,0.402])
clos_Be = np.array([0.875,0.671,0.498,0.423,0.379,0.332,0.289,0.272])
vlos_Be = np.array([0.389,0.317,0.246,0.210,0.191,0.167,0.147,0.137])
dscat_Be = np.array([1.267,1.020,0.797,0.684,0.623,0.538,0.478,0.438])
cscat_Be = np.array([0.954,0.724,0.541,0.463,0.413,0.360,0.317,0.294])
vscat_Be = np.array([0.424,0.341,0.265,0.227,0.205,0.178,0.158,0.145])
dbias_Be = np.array([-0.786,-0.504,-0.223,-0.156,-0.049,0.019,0.041,0.060])
dbias_e_Be = np.array([0.12,0.10,0.08,0.06,0.06,0.05,0.04,0.04])
cbias_Be = np.array([-0.625,-0.392,-0.164,-0.114,-0.036,0.017,0.029,0.040])
cbias_e_Be = np.array([0.09,0.08,0.06,0.04,0.04,0.03,0.03,0.03])
vbias_Be = np.array([-0.280,-0.183,-0.088,-0.065,-0.030,-0.006,0.002,0.015])
vbias_e_Be = np.array([0.04,0.03,0.03,0.02,0.02,0.02,0.02,0.01])

#Bower
dlos_Bw = np.array([1.066,0.852,0.680,0.593,0.543,0.506,0.464,0.438])
clos_Bw = np.array([0.836,0.643,0.495,0.425,0.381,0.354,0.327,0.305])
vlos_Bw = np.array([0.362,0.290,0.231,0.202,0.185,0.172,0.158,0.149])
dscat_Bw = np.array([1.193,0.963,0.768,0.678,0.615,0.559,0.518,0.486])
cscat_Bw = np.array([0.903,0.717,0.550,0.475,0.424,0.382,0.355,0.329])
vscat_Bw = np.array([0.401,0.323,0.255,0.225,0.203,0.183,0.169,0.158])
dbias_Bw = np.array([-0.732,-0.564,-0.373,-0.259,-0.159,-0.097,-0.067,-0.029])
dbias_e_Bw = np.array([0.11,0.09,0.08,0.06,0.06,0.06,0.05,0.05])
cbias_Bw = np.array([-0.595,-0.458,-0.315,-0.231,-0.150,-0.103,-0.083,-0.05])
cbias_e_Bw = np.array([0.09,0.07,0.06,0.04,0.04,0.04,0.04,0.04])
vbias_Bw = np.array([-0.261,-0.204,-0.139,-0.099,-0.066,-0.045,-0.034,-0.021])
vbias_e_Bw = np.array([0.04,0.03,0.03,0.02,0.02,0.02,0.02,0.02])

#Subhalos
dlos_S = np.array([1.125,0.925,0.740,0.629,0.578,0.540,0.530,0.563])
clos_S = np.array([0.783,0.631,0.496,0.429,0.387,0.359,0.351,0.368])
vlos_S = np.array([0.383,0.314,0.252,0.214,0.196,0.184,0.180,0.191])
dscat_S = np.array([1.230,1.011,0.813,0.691,0.640,0.594,0.586,0.629])
cscat_S = np.array([0.838,0.686,0.543,0.469,0.432,0.397,0.392,0.411])
vscat_S = np.array([0.412,0.339,0.271,0.232,0.214,0.200,0.198,0.212])
dbias_S = np.array([-0.581,-0.334,-0.085,0.038,0.163,0.259,0.311,0.352])
dbias_e_S = np.array([0.11,0.09,0.08,0.06,0.05,0.05,0.05,0.05])
cbias_S = np.array([-0.408,-0.226,-0.050,0.042,0.131,0.199,0.251,0.307])
cbias_e_S = np.array([0.07,0.06,0.06,0.04,0.04,0.03,0.03,0.04])
vbias_S = np.array([-0.209,-0.125,-0.042,0.002,0.043,0.076,0.101,0.132])
vbias_e_S = np.array([0.04,0.03,0.03,0.02,0.02,0.02,0.02,0.02])


#number biases and scatters (shifty-gapper + Stdev)
dscat_std = np.array([1.098,0.908,0.744,0.711,0.618,0.569,0.543,0.507])
cscat_std = np.array([0.779,0.625,0.500,0.473,0.413,0.379,0.367,0.344])
vscat_std = np.array([0.366,0.303,0.249,0.237,0.204,0.189,0.182,0.169])
dbias_std = np.array([-0.378,-0.154,-0.010,0.091,0.086,0.139,0.141,0.138])
cbias_std = np.array([-0.317,-0.140,-0.023,0.051,0.059,0.089,0.088,0.086])
vbias_std = np.array([-0.142,-0.066,-0.017,0.016,0.015,0.034,0.035,0.034])

#number biases and scatters (max cut + Beers)
dscat_max = np.array([1.249,0.964,0.790,0.718,0.633,0.579,0.528,0.509])
cscat_max = np.array([0.915,0.664,0.535,0.486,0.430,0.395,0.364,0.354])
vscat_max = np.array([0.416,0.321,0.264,0.239,0.209,0.192,0.175,0.168])
dbias_max = np.array([-0.533,-0.134,0.022,0.056,0.101,0.142,0.154,0.137])
cbias_max = np.array([-0.406,-0.124,0.006,0.037,0.066,0.092,0.094,0.090])
vbias_max = np.array([-0.193,-0.059,-0.005,0.006,0.022,0.035,0.040,0.040])

#number biases and scatters (max cut + Stdev)
dscat_maxstd = np.array([1.209,1.013,0.874,0.801,0.737,0.695,0.655,0.641])
cscat_maxstd = np.array([0.803,0.664,0.556,0.510,0.469,0.444,0.426,0.419])
vscat_maxstd = np.array([0.403,0.338,0.293,0.268,0.247,0.232,0.219,0.213])
dbias_maxstd = np.array([-0.125,0.099,0.239,0.287,0.331,0.363,0.338,0.334])
cbias_maxstd = np.array([-0.165,0.005,0.127,0.173,0.207,0.232,0.217,0.214])
vbias_maxstd = np.array([-0.059,0.018,0.066,0.083,0.096,0.107,0.100,0.098])

#number biases and scatters (3.5sigma cut + Beers)
dscat_3sig = np.array([1.388,1.094,0.862,0.746,0.643,0.581,0.520,0.492])
cscat_3sig = np.array([1.005,0.759,0.579,0.509,0.439,0.400,0.365,0.347])
vscat_3sig = np.array([0.463,0.365,0.287,0.249,0.212,0.191,0.173,0.163])
dbias_3sig = np.array([-0.668,-0.312,-0.134,-0.079,-0.041,-0.002,-0.001,-0.001])
cbias_3sig = np.array([-0.483,-0.223,-0.094,-0.052,-0.023,-0.010,-0.010,-0.008])
vbias_3sig = np.array([-0.238,-0.118,-0.058,-0.039,-0.025,-0.010,-0.012,-0.011])

#number biases and scatters (3.5sigma cut + Stdev)
dscat_3sigstd = np.array([1.306,1.055,0.840,0.748,0.648,0.557,0.521,0.497])
cscat_3sigstd = np.array([0.927,0.713,0.566,0.500,0.443,0.387,0.364,0.352])
vscat_3sigstd = np.array([0.436,0.351,0.281,0.249,0.215,0.185,0.172,0.165])
dbias_3sigstd = np.array([-0.551,-0.238,-0.133,-0.088,-0.044,-0.021,-0.027,-0.030])
cbias_3sigstd = np.array([-0.411,-0.195,-0.096,-0.064,-0.027,-0.014,-0.027,-0.032])
vbias_3sigstd = np.array([-0.198,-0.093,-0.057,-0.043,-0.027,-0.019,-0.020,-0.021])




randshift = np.array([-0.8,0.00,0.8])

####
#scatter vs n plot (just of los)
####
s = figure()
ax = s.add_subplot(111)
ax.plot(x,dlos,'bo:',lw=2,mec='b',mfc='w',mew=2,label='Virial Mass (l.o.s scatter)')
ax.plot(x,clos,'rd:',lw=2,mec='r',mfc='w',mew=2,label='Caustic Mass (l.o.s scatter)')
ax.plot(x,vscat,'gs:',lw=2,mec='g',mfc='w',mew=2,label='Velocity Disp (l.o.s scatter)')
ax.plot(x,dscat,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2,label='Virial Mass (obs)')
ax.plot(x,cscat,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2,label='Caustic Mass (obs)')
ax.set_xlabel('Ngals',fontsize=15)
ax.set_ylabel('scatter (N)',fontsize=15)
ax.legend(numpoints=1)
ax.set_ylim(0,1.2001)
#s.savefig('los_vs_n.png',dpi=400)
#s.savefig('los_vs_n.eps')
#s.savefig('los_vs_n.pdf')
show()
####
'''
####
#scatter vs n plot
####
s15 = figure()
ax15 = s15.add_subplot(111)
ax15.plot(x,np.sqrt(d3Dscat**2+(dlos)**2),'bo--',lw=2,c='b',mec='b',mfc='w',mew=2,label='Virial Mass (l.o.s scatter + intrinsic)')
ax15.plot(x,np.sqrt(c3Dscat**2+(clos)**2),'rd--',lw=2,c='r',mec='r',mfc='w',mew=2,label='Caustic Mass (l.o.s scatter + intrinsic)')
ax15.plot(x,dscat,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2,label='Virial Mass (obs)')
ax15.plot(x,cscat,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2,label='Caustic Mass (obs)')
#ax15.plot(x,dscat,c='blue',lw=2,label='Virial Mass')
#ax15.plot(x,cscat,c='red',lw=2,label='Caustic Mass')
#ax15.plot(x,np.sqrt((dlos/3.0)**2+(3*vscat)**2),c='blue',ls=':',lw=2)
#ax15.plot(x,np.sqrt(clos**2+vscat**2),c='red',ls=':',lw=2)
ax15.set_xlabel('Ngals',fontsize=15)
ax15.set_ylabel('scatter (N)',fontsize=15)
ax15.legend(numpoints=1)
ax15.set_ylim(0,1.2001)
s15.savefig('scatter_vs_n.png',dpi=400)
s15.savefig('scatter_vs_n.eps')
s15.savefig('scatter_vs_n.pdf')
show()
####

####
#bias vs n plot
####
s2 = figure(1,(17.5,6.5))
ax2 = AxesGrid(s2,111,nrows_ncols=(1,3),share_all=True,axes_pad=0.0,aspect=False)
#Guo data
ax2[0].plot(x+randshift[0],dbias,'ro-',lw=1,c='r',mec='r',mfc='r',mew=1,label='Guo (Virial)')
ax2[1].plot(x+randshift[1],cbias,'ro-',lw=1,c='r',mec='r',mfc='r',mew=1,label='Guo (Caustic)')
ax2[2].plot(x+randshift[2],vbias,'ro-',lw=1,c='r',mec='r',mfc='r',mew=1,label='Guo (Vel Disp)')
ax2[0].errorbar(x+randshift[0],dbias,yerr=dbias_e,ecolor='red',fmt=None)
ax2[1].errorbar(x+randshift[1],cbias,yerr=cbias_e,ecolor='red',fmt=None)
ax2[2].errorbar(x+randshift[2],vbias,yerr=vbias_e,ecolor='red',fmt=None)
#Delucia data
ax2[0].plot(x+randshift[0],dbias_D,'d-',lw=1,c='orange',mec='orange',mfc='orange',mew=1,label='Delucia')
ax2[1].plot(x+randshift[1],cbias_D,'d-',lw=1,c='orange',mec='orange',mfc='orange',mew=1,label='Delucia')
ax2[2].plot(x+randshift[2],vbias_D,'d-',lw=1,c='orange',mec='orange',mfc='orange',mew=1,label='Delucia')
ax2[0].errorbar(x+randshift[0],dbias_D,yerr=dbias_e_D,ecolor='orange',fmt=None)
ax2[1].errorbar(x+randshift[1],cbias_D,yerr=cbias_e_D,ecolor='orange',fmt=None)
ax2[2].errorbar(x+randshift[2],vbias_D,yerr=vbias_e_D,ecolor='orange',fmt=None)
#Bertone data
ax2[0].plot(x+randshift[0],dbias_Be,'gs-',lw=1,c='g',mec='g',mfc='g',mew=1,label='Bertone')
ax2[1].plot(x+randshift[1],cbias_Be,'gs-',lw=1,c='g',mec='g',mfc='g',mew=1,label='Bertone')
ax2[2].plot(x+randshift[2],vbias_Be,'gs-',lw=1,c='g',mec='g',mfc='g',mew=1,label='Bertone')
ax2[0].errorbar(x+randshift[0],dbias_Be,yerr=dbias_e_Be,ecolor='green',fmt=None)
ax2[1].errorbar(x+randshift[1],cbias_Be,yerr=cbias_e_Be,ecolor='green',fmt=None)
ax2[2].errorbar(x+randshift[2],vbias_Be,yerr=vbias_e_Be,ecolor='green',fmt=None)
#Bower data
ax2[0].plot(x+randshift[0],dbias_Bw,'b*-',lw=1,c='b',mec='b',mfc='b',mew=1,label='Bower')
ax2[1].plot(x+randshift[1],cbias_Bw,'b*-',lw=1,c='b',mec='b',mfc='b',mew=1,label='Bower')
ax2[2].plot(x+randshift[2],vbias_Bw,'b*-',lw=1,c='b',mec='b',mfc='b',mew=1,label='Bower')
ax2[0].errorbar(x+randshift[0],dbias_Bw,yerr=dbias_e_Bw,ecolor='blue',fmt=None)
ax2[1].errorbar(x+randshift[1],cbias_Bw,yerr=cbias_e_Bw,ecolor='blue',fmt=None)
ax2[2].errorbar(x+randshift[2],vbias_Bw,yerr=vbias_e_Bw,ecolor='blue',fmt=None)
#Subhalo data
ax2[0].plot(x+randshift[0],dbias_S,'x-',lw=1,c='purple',mec='purple',mfc='purple',mew=1,label='Subhalos')
ax2[1].plot(x+randshift[1],cbias_S,'x-',lw=1,c='purple',mec='purple',mfc='purple',mew=1,label='Subhalos')
ax2[2].plot(x+randshift[2],vbias_S,'x-',lw=1,c='purple',mec='purple',mfc='purple',mew=1,label='Subhalos')
ax2[0].errorbar(x+randshift[0],dbias_S,yerr=dbias_e_S,ecolor='purple',fmt=None)
ax2[1].errorbar(x+randshift[1],cbias_S,yerr=cbias_e_S,ecolor='purple',fmt=None)
ax2[2].errorbar(x+randshift[2],vbias_S,yerr=vbias_e_S,ecolor='purple',fmt=None)
ax2[1].set_xlabel('Ngals',fontsize=15)
ax2[0].set_ylabel('Bias (N)',fontsize=15)
ax2[0].set_ylim(-0.90,0.40)
handles, labels = ax2[0].get_legend_handles_labels()
leg = ax2[0].legend(handles[:5],labels[:5],loc=4,numpoints=1)
handles, labels = ax2[1].get_legend_handles_labels()
leg = ax2[1].legend(handles[:5],labels[:5],loc=4,numpoints=1)
handles, labels = ax2[2].get_legend_handles_labels()
leg = ax2[2].legend(handles[:5],labels[:5],loc=4,numpoints=1)
ax2[1].xaxis.set_major_locator(MultipleLocator(20))
ax2[1].set_xlim(0.1,155)
s2.savefig('bias_vs_n.png',dpi=400)
s2.savefig('bias_vs_n.eps')
s2.savefig('bias_vs_n.pdf')
show()

####
#bias vs percent brightest Core galaxies for 100 galaxies
####
s3 = figure()
ax3 = s3.add_subplot(111)
ax3.plot(percent_red+randshift[0],d_core,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2,label='Virial Mass')
ax3.plot(percent_red+randshift[1],caustic_core,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2,label='Caustic Mass')
ax3.plot(percent_red+randshift[2],vdisp_core,'gs-',lw=2,c='g',mec='g',mfc='g',mew=2,label='Vel Disp')
ax3.errorbar(percent_red+randshift[0],d_core,yerr=d_core_err,fmt=None,ecolor='blue')
ax3.errorbar(percent_red+randshift[1],caustic_core,yerr=caustic_core_err,fmt=None,ecolor='red')
ax3.errorbar(percent_red+randshift[2],vdisp_core,yerr=vdisp_core_err,fmt=None,ecolor='green')
ax3.set_ylabel('Bias',fontsize=15)
ax3.set_xlim(0,110)
ax3.set_ylim(-0.1999,0.10001)
ax3.legend(['Virial Mass','Caustic Mass','Vel Disp'],loc=4,numpoints=1)
divider = make_axes_locatable(ax3)
ax3_2 = divider.append_axes("bottom", size=2, pad=0.0, sharex=ax3)
ax3_2.plot(percent_red,d_core_err2,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2)
ax3_2.plot(percent_red,caustic_core_err2,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2)
ax3_2.plot(percent_red,vdisp_core_err2,'gs-',lw=2,c='g',mec='g',mfc='g',mew=2)
ax3_2.yaxis.set_major_locator(MultipleLocator(0.2))
ax3_2.set_ylim(0.0,0.9)
ax3_2.set_xlim(0,110)
ax3_2.set_ylabel('Scatter',fontsize=15)
ax3_2.set_xlabel('Percent Core Galaxies',fontsize=15)
setp(ax3.get_xticklabels(),visible=False)
s3.savefig('bias_vs_core.png',dpi=400)
s3.savefig('bias_vs_core.eps')
s3.savefig('bias_vs_core.pdf')
show()
####

####
#bias vs percent brightest Wing galaxies for 100 galaxies
####
s4 = figure(1,(9.5,7.5))
ax4 = s4.add_subplot(111)
ax4.plot(percent_red+randshift[0],d_wing,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2,label='Virial Mass')
ax4.plot(percent_red+randshift[1],caustic_wing,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2,label='Caustic Mass')
ax4.plot(percent_red+randshift[2],vdisp_wing,'gs-',lw=2,c='g',mec='g',mfc='g',mew=2,label='Vel Disp')
ax4.errorbar(percent_red+randshift[0],d_wing,yerr=d_wing_err,fmt=None,ecolor='blue')
ax4.errorbar(percent_red+randshift[1],caustic_wing,yerr=caustic_wing_err,fmt=None,ecolor='red')
ax4.errorbar(percent_red+randshift[2],vdisp_wing,yerr=vdisp_wing_err,fmt=None,ecolor='green')
ax4.set_ylabel('Bias',fontsize=15)
ax4.set_xlim(0,110)
ax4.yaxis.set_major_locator(MultipleLocator(0.05))
ax4.set_ylim(-0.19999,0.20001)
ax4.legend(['Virial Mass','Caustic Mass','Vel Disp'],loc=4,numpoints=1)
divider = make_axes_locatable(ax4)
ax4_2 = divider.append_axes("bottom", size=2, pad=0.0, sharex=ax4)
ax4_2.plot(percent_red,d_wing_err2,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2)
ax4_2.plot(percent_red,caustic_wing_err2,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2)
ax4_2.plot(percent_red,vdisp_wing_err2,'gs-',lw=2,c='g',mec='g',mfc='g',mew=2)
ax4_2.yaxis.set_major_locator(MultipleLocator(0.2))
ax4_2.set_ylim(0.0,0.9)
ax4_2.set_xlim(0,110)
ax4_2.set_ylabel('Scatter',fontsize=15)
ax4_2.set_xlabel('Percent Wing Galaxies',fontsize=15)
setp(ax4.get_xticklabels(),visible=False)
s4.savefig('bias_vs_wing.png',dpi=400)
s4.savefig('bias_vs_wing.eps')
s4.savefig('bias_vs_wing.pdf')
show()
####

####
#bias vs percent red galaxies (for 50 galaxies)
####
s5 = figure(1,(9.5,7.5))
ax5 = s5.add_subplot(111)
#ax5 = AxesGrid(s5,111,nrows_ncols=(2,1),axes_pad=0.0,aspect='False')
ax5.plot(percent_red+randshift[0],d_red_rand,'bo--',lw=2,c='b',mec='b',mfc='w',mew=2,label='Virial Mass (rand)')
ax5.plot(percent_red+randshift[1],caustic_red_rand,'rd--',lw=2,c='r',mec='r',mfc='w',mew=2,label='Caustic Mass (rand)')
ax5.plot(percent_red+randshift[2],vdisp_red_rand,'gs--',lw=2,c='g',mec='g',mfc='w',mew=2,label='Vel Disp (rand)')
ax5.plot(percent_red+randshift[0],d_red,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2,label='Virial Mass (bright)')
ax5.plot(percent_red+randshift[1],caustic_red,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2,label='Caustic Mass (bright)')
ax5.plot(percent_red+randshift[2],vdisp_red,'gs-',lw=2,c='g',mec='g',mfc='g',mew=2,label='Vel Disp (bright)')
#ax5.plot(percent_red+randshift[1],caustic_red,ls='-',lw=2,c='r',label='Bright')
#ax5.plot(percent_red+randshift[1],caustic_red_rand,ls='--',lw=2,c='r',mec='r',mfc='w',label='Random')
#ax5.plot(percent_red+randshift[0],d_red,ls='-',lw=2,c='b')
#ax5.plot(percent_red+randshift[2],vdisp_red,ls='-',lw=2,c='g')
#ax5.plot(percent_red+randshift[0],d_red_rand,ls='--',lw=2,c='b')
#ax5.plot(percent_red+randshift[2],vdisp_red_rand,ls='--',lw=2,c='g')
ax5.errorbar(percent_red+randshift[0],d_red,yerr=d_red_err,fmt=None,ecolor='blue')
ax5.errorbar(percent_red+randshift[1],caustic_red,yerr=caustic_red_err,fmt=None,ecolor='red')
ax5.errorbar(percent_red+randshift[2],vdisp_red,yerr=vdisp_red_rand_err,fmt=None,ecolor='green')
##ax5.errorbar(percent_red+randshift[0],d_red_rand,yerr=d_red_rand_err,fmt=None,ecolor='blue')
##ax5.errorbar(percent_red+randshift[1],caustic_red_rand,yerr=caustic_red_rand_err,fmt=None,ecolor='red')
##ax5.errorbar(percent_red+randshift[2],vdisp_red_rand,yerr=vdisp_red_rand_err,fmt=None,ecolor='green')
#ax5[0].axhline(0.011,c='blue',lw=2)
#ax5[0].axhline(0.000,c='green',lw=2)
#ax5[0].axhline(0.007,c='red',lw=2)
ax5.set_ylabel('Bias',fontsize=15)
ax5.yaxis.set_major_locator(MultipleLocator(0.1))
ax5.set_ylim(-0.15999,0.550001)
leg = ax5.legend(['Virial Mass (rand)','Caustic Mass (rand)','Vel Disp (rand)','Virial Mass (bright)','Caustic Mass (bright)','Vel Disp (bright)'],numpoints=1,ncol=2)
leg.get_frame().set_alpha(0.3)
divider = make_axes_locatable(ax5)
ax5_2 = divider.append_axes("bottom", size=2, pad=0.0, sharex=ax5)
ax5_2.set_xlabel('Percent Red Galaxies',fontsize=15)
ax5_2.set_xlim(0,110)
ax5_2.plot(percent_red,d_red_err2,'bo-',lw=2,c='b',mec='b',mfc='b',mew=2)
ax5_2.plot(percent_red,caustic_red_err2,'rd-',lw=2,c='r',mec='r',mfc='r',mew=2)
ax5_2.plot(percent_red,vdisp_red_err2,'gs-',lw=2,c='g',mec='g',mfc='g',mew=2)
ax5_2.yaxis.set_major_locator(MultipleLocator(0.2))
ax5_2.set_ylim(0.0,0.9)
ax5_2.set_ylabel('Scatter',fontsize=15)
setp(ax5.get_xticklabels(),visible=False)
s5.savefig('bias_vs_red.png',dpi=250)
s5.savefig('bias_vs_red.eps')
s5.savefig('bias_vs_red.pdf')
show()
####

####
#bias vs percent brightest/dimmest red galaxies (for 50 galaxies)
####
s6 = figure(1,(9.5,7.5))
ax6 = s6.add_subplot(111)
#ax6 = AxesGrid(s6,111,nrows_ncols=(2,1),axes_pad=0.0,aspect=False)
ax6.plot(percent_mag+randshift[0],d_mag_dim,'bo--',c='b',mec='b',mfc='w',mew=2,label='Virial Mass (dim)')
ax6.plot(percent_mag+randshift[1],caustic_mag_dim,'rd--',c='r',mec='r',mfc='w',mew=2,label='Caustic Mass (dim)')
ax6.plot(percent_mag+randshift[2],vdisp_mag_dim,'gs--',c='g',mec='g',mfc='w',mew=2,label='Vel Disp (dim)')
ax6.plot(percent_mag+randshift[0],d_mag,'bo-',c='b',mec='b',mfc='b',mew=2,label='Virial Mass (bright)')
ax6.plot(percent_mag+randshift[1],caustic_mag,'rd-',c='r',mec='r',mfc='r',mew=2,label='Caustic Mass (bright)')
ax6.plot(percent_mag+randshift[2],vdisp_mag,'gs-',c='g',mec='g',mfc='g',mew=2,label='Vel Disp (bright)')
#ax6.plot(percent_mag,d_mag,ls='-',lw=2,c='b')
#ax6.plot(percent_mag,caustic_mag,ls='-',lw=2,c='r',label='Bright')
#ax6.plot(percent_mag,vdisp_mag,ls='-',lw=2,c='g')
ax6.errorbar(percent_mag+randshift[0],d_mag,yerr=d_mag_err,fmt=None,ecolor='blue')
ax6.errorbar(percent_mag+randshift[1],caustic_mag,yerr=caustic_mag_err,fmt=None,ecolor='red')
ax6.errorbar(percent_mag+randshift[2],vdisp_mag,yerr=vdisp_mag_err,fmt=None,ecolor='green')
#ax6.plot(percent_mag,d_mag_dim,ls='--',lw=2,c='b')
#ax6.plot(percent_mag,caustic_mag_dim,ls='--',lw=2,c='r',label='Dim')
#ax6.plot(percent_mag,vdisp_mag_dim,ls='--',lw=2,c='g')
#ax6.errorbar(percent_mag+randshift[0],d_mag_dim,yerr=d_mag_dim_err,fmt=None,ecolor='blue')
#ax6.errorbar(percent_mag+randshift[1],caustic_mag_dim,yerr=caustic_mag_dim_err,fmt=None,ecolor='red')
#ax6.errorbar(percent_mag+randshift[2],vdisp_mag_dim,yerr=vdisp_mag_dim_err,fmt=None,ecolor='green')
#ax6[0].yaxis.set_label_coords(-0.20,0.05)
ax6.yaxis.set_major_locator(MultipleLocator(0.05))
ax6.set_ylim(-.270001,0.0501)
leg = ax6.legend(['Virial Mass (-brightest)','Caustic Mass (-brightest)','Vel Disp (-brightest)','Virial Mass (-dimmest)','Caustic Mass (-dimmest)','Vel Disp (-dimmest)'],loc=4,numpoints=1,ncol=2)
#leg.draw_frame(False)
leg.get_frame().set_alpha(0.5)
ax6.set_ylabel('Bias',fontsize=15)
divider = make_axes_locatable(ax6)
ax6_2 = divider.append_axes("bottom", size=2, pad=0.0, sharex=ax6)
ax6_2.plot(percent_mag,d_mag_err2,'bo-',c='b',mec='b',mfc='b',mew=2)
ax6_2.plot(percent_mag,caustic_mag_err2,'ro-',mec='red',mfc='r',mew=2)
ax6_2.plot(percent_mag,vdisp_mag_err2,'gs-',c='g',mec='g',mfc='g',mew=2)
#ax6[1].yaxis.set_label_coords(0.35,0.40)
ax6_2.yaxis.set_major_locator(MultipleLocator(0.2))
ax6_2.set_xlim(0,110)
ax6_2.set_ylim(0.00,0.90)
ax6_2.set_xlabel('Percent of 50 Brightest Galaxies',fontsize=15)
ax6_2.set_ylabel('Scatter',fontsize=15)
setp(ax6.get_xticklabels(),visible=False)
s6.savefig('bias_vs_bright.png',dpi=400)
s6.savefig('bias_vs_bright.eps')
s6.savefig('bias_vs_bright.pdf')
show()
####

####
#vdisp scatter vs virial and caustic scatter
####
s7 = figure()
ax7 = s7.add_subplot(111)
ax7.plot(vscat,dscat,'bo',markersize=11,label='Virial Mass')
ax7.plot(vscat,cscat,'rd',markersize=11,label='Caustic Mass')
ax7.plot(np.linspace(0,1.5,1000),3*np.linspace(0,1.5,1000),c='b')
ax7.plot(np.linspace(0,1.5,1000),2*np.linspace(0,1.5,1000),c='r')
ax7.set_xlabel('Velocity Dispersion Scatter',fontsize=15)
ax7.set_ylabel('Mass Scatter',fontsize=15)
ax7.set_xlim(0.1,0.4)
ax7.set_ylim(0.1,1.200001)
legend(numpoints=1,loc=2)
s7.savefig('vdisp_vs_mass_scatt.png',dpi=400)
s7.savefig('vdisp_vs_mass_scatt.eps')
s7.savefig('vdisp_vs_mass_scatt.pdf')
show()

####
#Mass bias and scatter comparing cuts and dispersion measurements
####
s8 = figure(1,(13.5,5.5))
ax8 = s8.add_subplot(121)
ax8.plot(x,vscat,lw=3,c='r',label='Gapper')
ax8.plot(x,vscat_max,ls='--',lw=3,c='g',label='Bounded')
ax8.plot(x,vscat_3sig,ls=':',lw=3,c='b',label='3sig')
ax8.plot(x,vscat,'rs',ls='None',c='r',mec='r',mfc='r',mew=1)
ax8.plot(x,vscat_max,'gs',ls='None',c='g',mec='g',mfc='g',mew=1)
ax8.plot(x,vscat_3sig,'bs',ls='None',c='b',mec='b',mfc='b',mew=1)
#ax8.plot(x,vscat_std,'bs-',lw=1,c='b',mec='b',mfc='b',mew=1)
#ax8.plot(x,vscat_maxstd,'bs--',lw=1,c='b',mec='b',mfc='b',mew=1)
#ax8.plot(x,vscat_3sigstd,'bs:',lw=1,c='b',mec='b',mfc='b',mew=1)
ax8.set_xlabel('Ngal',fontsize=15)
ax8.set_ylabel('Scatter',fontsize=15)
ax8.set_ylim(0.10,0.50)
handles, labels = ax8.get_legend_handles_labels()
leg = ax8.legend(handles[:4],labels[:4])
#[leg.legendHandles[i].set_color('green') for i in range(len(handles))]
#ax8.set_ylim(0.2,1.1)
#ax8.yaxis.set_major_locator(MultipleLocator(0.1))
ax9 = s8.add_subplot(122)
ax9.plot(x,vbias,'rs-',lw=3,c='r',mec='r',mfc='r',mew=1,label='Beers')
ax9.plot(x,vbias_max,'gs--',lw=3,c='g',mec='g',mfc='g',mew=1)
ax9.plot(x,vbias_3sig,'bs:',lw=3,c='b',mec='b',mfc='b',mew=1)
#ax9.plot(x,vbias_std,'bs-',lw=1,c='b',mec='b',mfc='b',mew=1,label='Stdev')
#ax9.plot(x,vbias_maxstd,'bs--',lw=1,c='b',mec='b',mfc='b',mew=1)
#ax9.plot(x,vbias_3sigstd,'bs:',lw=1,c='b',mec='b',mfc='b',mew=1)
ax9.axhline(0.0,ls='--',c='0.75')
ax9.set_ylabel('Bias',fontsize=15)
ax9.set_xlabel('Ngal',fontsize=15)
#handles, labels = ax9.get_legend_handles_labels()
#leg = ax9.legend(handles,labels,numpoints=1,loc=4)
#[leg.legendHandles[i].set_linestyle('None') for i in range(len(handles))]
s8.savefig('Interlop_removal2.png')
s8.savefig('Interlop_removal2.eps')
s8.savefig('Interlop_removal2.pdf')
show()


####
#velocity dispersion bias can be fixed due to color
####
N = np.array([25,35,50,75,100,150])
#red_frac = np.array([95,90,85,80,75,75,70])

#ax5.plot(percent_red+randshift[2],vdisp_red,'gs-',lw=2,c='g',mec='g',mfc='g',mew=2,label='Vel Disp (bright)')
#ax5.errorbar(percent_red+randshift[2],vdisp_red,yerr=vdisp_red_rand_err,fmt=None,ecolor='green')
#red_perc = np.array([10,30,50,70,90,100])
#vdisp_red = np.array([0.107,0.078,0.051,0.019,-0.019,-0.034])
vbias = np.array([-0.084,-0.057,-0.027,-0.012,-0.002,0.002])
vbias_e_D = np.array([0.03,0.02,0.02,0.02,0.02,0.01])
#ax2[2].plot(x+randshift[2],vbias_D,'d-',lw=1,c='orange',mec='orange',mfc='orange',mew=1,label='Delucia')

interp_func = interp1d(np.array([10,30,50,70,90,100]),np.array([0.107,0.078,0.051,0.019,-0.019,-0.034]))
vdisp_bias = interp_func(np.array([90,85,80,75,70,65]))
correction = np.array([-0.084,-0.057,-0.027,-0.012,-0.002,0.002])-(vdisp_bias-vdisp_bias[-1])
s = figure()
ax = s.add_subplot(111)
ax.plot(N,vbias,'bo',ls='-',label='Bias')
ax.plot(N,correction,'go',markersize=5,ls='-',label='Corrected Bias')
ax.errorbar(N,correction,yerr=vbias_e_D,fmt=None,ecolor='green')
handles,labels = ax.get_legend_handles_labels()
leg = ax.legend(handles[:-1],labels[:-1],numpoints=1,loc=4)
ax.set_xlabel('Ngal',fontsize=15)
ax.set_ylabel(r'$\sigma$ Bias',fontsize=15)
s.savefig('Fixed_color_bias.png')
s.savefig('Fixed_color_bias.eps')
show()
'''
